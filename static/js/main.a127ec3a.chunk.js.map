{"version":3,"sources":["components/elements/SearchBar/SearchBar.js","components/elements/TitleGrid/TitleGrid.js","components/elements/AnimuThumb/AnimuThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/main/main.js","components/elements/Header/webgl/Ripple/shaders/fragmentShader.js","components/elements/Header/webgl/Ripple/shaders/vertexShader.js","components/elements/Header/webgl/Ripple/Ripple.js","components/elements/Header/webgl/ThreeWrap/ThreeWrap.js","components/elements/Header/Header.js","components/elements/AnimuInfo/AnimuInfo.js","components/elements/Animu/Animu.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["SearchBar","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","props","callback","inherits","createClass","key","react_default","a","createElement","className","type","placeholder","onChange","Component","TitleGrid","children","map","element","i","AnimuThumb","react_router_dom","to","pathname","animuId","animuName","src","image","alt","LoadMoreBtn","onClick","text","main","animu","searchTerm","undefined","status","sort","page","currentPage","hasNextPage","fetchItems","variables","search","perPage","window","innerWidth","options","method","headers","Content-Type","Accept","body","JSON","stringify","query","fetch","then","response","json","ok","Promise","reject","data","Page","pageInfo","toConsumableArray","media","catch","error","alert","console","searchItems","loadMoreItems","elements_SearchBar_SearchBar","elements_TitleGrid_TitleGrid","elements_AnimuThumb_AnimuThumb","clickable","coverImage","large","id","title","romaji","elements_LoadMoreBtn_LoadMoreBtn","fragmentShader","vertexShader","process","geometry","material","uniforms","mesh","rtTexture","rtTexture2","mouse","x","y","press_time","Ripple","initMesh","texture","environment","pooltex","loader","THREE","TextureLoader","load","tex","wrapS","RepeatWrapping","wrapT","minFilter","LinearFilter","NearestMipMapNearestFilter","onTexLoad","animate","scale","PlaneBufferGeometry","WebGLRenderTarget","Math","floor","pWidth","pHeight","FloatType","offset","Vector2","u_time","u_resolution","u_img","width","height","u_noise","u_buffer","u_texture","u_environment","u_mouse","Vector3","u_frame","u_renderpass","u_scale","u_offset","ShaderMaterial","extensions","derivatives","Mesh","updateMesh","onWindowResize","pBox","clientWidth","clientHeight","width_ratio","height_ratio","max","img_height","img_width","box_height","box_width","addEventListener","ripple","e","z","ratio","pageX","pageY","delta","requestAnimationFrame","render","updateRenderer","renderTexture","odims","clone","setRenderTarget","buffer","ThreeWrap","updateSize","box","renderer","setSize","scene","add","camera","loaded","innerHeight","Scene","Camera","WebGLRenderer","_this2","document","querySelector","appendChild","domElement","ondragstart","log","webgl_Ripple_Ripple","Header","webgl_ThreeWrap_ThreeWrap","AnimuInfo","style","backgroundImage","bannerImage","dangerouslySetInnerHTML","__html","description","min","optimum","low","high","averageScore","Animu","match","params","elements_AnimuInfo_AnimuInfo","NotFound","App","basename","elements_Header_Header","Fragment","react_router","path","component","exact","ReactDOM","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.a127ec3a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './SearchBar.css'\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        value: '',\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({value: event.target.value})\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout( () => {\r\n            this.props.callback(this.state.value);\r\n        }, 500);\r\n    }\r\n    render (){\r\n        return (\r\n            <div className = \"searchbar\">\r\n                <div className = \"searchbar__content\">\r\n                    <input\r\n                    type = \"text\"\r\n                    className = \"searchbar__input\"\r\n                    placeholder = \"Search\"\r\n                    onChange = {this.doSearch}\r\n                    value = {this.state.value}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './TitleGrid.css';\r\n\r\n\r\nconst TitleGrid = (props) => {\r\n\r\n    const renderElements = () => {\r\n        const gridElements = props.children.map((element, i) => {\r\n            return (\r\n                <div key = {i} className = \"titleGrid__element\">\r\n                    {element}\r\n                </div>\r\n            )\r\n        })\r\n        return gridElements;\r\n    }\r\n    \r\n    return (\r\n        <div className = \"titleGrid\">\r\n            <div className = \"titleGrid__content\">\r\n                {renderElements()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleGrid;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './AnimuThumb.css';\r\n\r\nconst AnimuThumb = (props) => {\r\n    return (\r\n        \r\n            <Link to={{ pathname: `/${props.animuId}`, animuName: `${props.animuName}` }}>\r\n                <div className=\"animuThumb\">\r\n                    <img src = {props.image} alt='htrhr'/>\r\n                    <p>{props.animuName}</p>\r\n                </div>\r\n            </Link>\r\n        \r\n    )\r\n}\r\n\r\nexport default AnimuThumb;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n    return (\r\n        <div className = \"loadButton\" onClick={props.onClick}>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React, { Component } from 'react';\r\nimport './main.css';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport TitleGrid from '../elements/TitleGrid/TitleGrid';\r\nimport AnimuThumb from '../elements/AnimuThumb/AnimuThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\n\r\n\r\nclass main extends Component {\r\n  state = {\r\n    animu: [],\r\n    searchTerm: undefined, \r\n    status: 'RELEASING',\r\n    sort: 'POPULARITY_DESC',\r\n    page: 1,\r\n    currentPage: undefined,\r\n    hasNextPage: 1,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchItems()\r\n  }\r\n\r\n  fetchItems = (searchTerm, page) => {\r\n    var query = `\r\n    query ($id: Int, $page: Int, $perPage: Int, $search: String, $status: MediaStatus, $sort: [MediaSort]) {\r\n      Page (page: $page, perPage: $perPage) {\r\n        pageInfo {\r\n          total\r\n          currentPage\r\n          lastPage\r\n          hasNextPage\r\n          perPage\r\n        }\r\n        media (id: $id, search: $search, status: $status, sort: $sort, type: ANIME) {\r\n          id\r\n          coverImage {\r\n            large\r\n          }\r\n          title {\r\n            romaji\r\n            english\r\n            native\r\n          }\r\n        }\r\n      }\r\n    }\r\n    `;\r\n\r\n    searchTerm ? \r\n      this.setState ({\r\n        searchTerm,\r\n        status: undefined,\r\n        sort: 'SEARCH_MATCH',\r\n      }) : \r\n      this.setState ({\r\n        searchTerm: undefined, \r\n        status: 'RELEASING',\r\n        sort: 'POPULARITY_DESC',\r\n      })\r\n\r\n    var variables = {\r\n      search: this.state.searchTerm,\r\n      page: page || 1,\r\n      perPage: window.innerWidth > 1500 ? 18  : 12,\r\n      status: this.state.status,\r\n      sort: this.state.sort,\r\n    };\r\n\r\n    var url = 'https://graphql.anilist.co',\r\n      options = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          query: query,\r\n          variables: variables\r\n        })\r\n      };\r\n    function handleResponse(response) {\r\n      return response.json().then(function (json) {\r\n        return response.ok ? json : Promise.reject(json);\r\n      });\r\n    }\r\n\r\n    function handleError(error) {\r\n      alert('Error, check console');\r\n      console.error(error);\r\n    }\r\n    \r\n    fetch(url, options)\r\n    .then(handleResponse)\r\n    .then(data => {\r\n      this.setState({\r\n        hasNextPage: data.data.Page.pageInfo.hasNextPage,\r\n        currentPage: data.data.Page.pageInfo.currentPage,\r\n        animu: [...this.state.animu, ...data.data.Page.media],\r\n      })\r\n\r\n    })\r\n    .catch(handleError)\r\n  };\r\n  \r\n  searchItems = (value) => {\r\n    this.setState ({\r\n      animu: []\r\n    })\r\n    this.fetchItems(value)\r\n  }\r\n\r\n  loadMoreItems = () => {\r\n    this.fetchItems(this.state.searchTerm, this.state.currentPage + 1)\r\n  };\r\n\r\n  render() {    \r\n    return (\r\n      <div className=\"content-wrap\">\r\n        <SearchBar callback = {this.searchItems} />\r\n        <h3>{this.state.searchTerm ? 'Search Result': 'Current Season'}</h3>\r\n        <TitleGrid>\r\n        {this.state.animu.map ( (element, i) => {\r\n            return <AnimuThumb\r\n                key = {i}\r\n                clickable = {true}\r\n                image = {element.coverImage.large}\r\n                animuId = {element.id}\r\n                animuName = {element.title.romaji}\r\n                />\r\n        })}\r\n        </TitleGrid>\r\n        {this.state.hasNextPage ? <LoadMoreBtn text = \"Load More\" onClick = {this.loadMoreItems}/> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default main;\r\n","export default `\r\n  uniform vec2 u_resolution;\r\n  uniform vec2 u_img;  \r\n  uniform float u_scale;\r\n  uniform vec2 u_offset;\r\n  uniform vec3 u_mouse;\r\n  uniform float u_time;\r\n  uniform sampler2D u_noise;\r\n  uniform sampler2D u_buffer;\r\n  uniform sampler2D u_environment;\r\n  uniform sampler2D u_texture;\r\n  uniform bool u_renderpass;\r\n  uniform int u_frame;\r\n  \r\n  #define PI 3.141592653589793\r\n  #define TAU 6.283185307179586\r\n  #define rain 1\r\n  #define depth 20.\r\n  #define velPropagation 1.4\r\n  #define pow2(x) (x * x)\r\n  \r\n  // Holy fuck balls, fresnel!\r\n  const float bias = .2;\r\n  const float scale = 10.;\r\n  const float power = 10.1;\r\n  \r\n  // blur constants\r\n  const float blurMultiplier = 0.95;\r\n  const float blurStrength = 2.98;\r\n  const int samples = 8;\r\n  const float sigma = float(samples) * 0.25;\r\n  \r\n\r\n  vec2 hash2(vec2 p)\r\n  {\r\n    vec2 o = texture2D( u_noise, (p+0.5)/256.0, -100.0 ).xy;\r\n    return o;\r\n  }\r\n\r\n  float gaussian(vec2 i) {\r\n    return 1.0 / (2.0 * PI * pow2(sigma)) * exp(-((pow2(i.x) + pow2(i.y)) / (2.0 * pow2(sigma))));\r\n  }\r\n\r\n  vec3 hash33(vec3 p){ \r\n\r\n    float n = sin(dot(p, vec3(7, 157, 113)));    \r\n    return fract(vec3(2097152, 262144, 32768)*n); \r\n  }\r\n\r\n  vec3 blur(sampler2D sp, vec2 uv, vec2 scale) {\r\n    vec3 col = vec3(0.0);\r\n    float accum = 0.0;\r\n    float weight;\r\n    vec2 offset;\r\n\r\n    for (int x = -samples / 2; x < samples / 2; ++x) {\r\n        for (int y = -samples / 2; y < samples / 2; ++y) {\r\n            offset = vec2(x, y);\r\n            weight = gaussian(offset);\r\n            col += texture2D(sp, uv + scale * offset).rgb * weight;\r\n            accum += weight;\r\n        }\r\n    }\r\n\r\n    return col / accum;\r\n  }\r\n  \r\n  vec3 hsb2rgb( in vec3 c ){\r\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\r\n                             6.0)-3.0)-1.0,\r\n                     0.0,\r\n                     1.0 );\r\n    rgb = rgb*rgb*(3.0-2.0*rgb);\r\n    return c.z * mix( vec3(1.0), rgb, c.y);\r\n  }\r\n  \r\n  vec3 domain(vec2 z){\r\n    return vec3(hsb2rgb(vec3(atan(z.y,z.x)/TAU,1.,1.)));\r\n  }\r\n  vec3 colour(vec2 z) {\r\n      return domain(z);\r\n  }\r\n  \r\n  const float delta = .005;\r\n  \r\n  \r\n  vec4 renderRipples() {\r\n    vec2 uv = (gl_FragCoord.xy - 0.5 * u_resolution.xy) / min(u_resolution.y, u_resolution.x);\r\n    vec3 e = vec3(vec2(3.6)/u_resolution.xy,0.);\r\n    vec2 sample = gl_FragCoord.xy / u_resolution.xy;\r\n    float ratio = u_resolution.x / u_resolution.y;\r\n    vec2 mouse = u_mouse.xy - uv;\r\n    \r\n    vec4 fragcolour = texture2D(u_buffer, sample);\r\n    \r\n    float shade = 0.;\r\n    \r\n    // float shade = 1. - smoothstep(.1, .15, length(mouse));\r\n    if(u_mouse.z == 1.) {\r\n      shade = smoothstep(.02 + abs(sin(u_time*10.) * .006), .0, length(mouse)); \r\n    }\r\n    if(mod(u_time, .1) >= .095) {\r\n      vec2 hash = hash2(vec2(u_time*2., sin(u_time*10.)))*3.-1.;\r\n      shade += smoothstep(.012, .0, length(uv-hash+.5));\r\n    }\r\n    // shade -= (smoothstep(.185, .0, length(mouse))-shade)*2.;\r\n\r\n    vec4 texcol = fragcolour;\r\n\r\n    float d = shade * 2.;\r\n\r\n    float t = texture2D(u_buffer, sample-e.zy, 1.).x;\r\n    float r = texture2D(u_buffer, sample-e.xz, 1.).x;\r\n    float b = texture2D(u_buffer, sample+e.xz, 1.).x;\r\n    float l = texture2D(u_buffer, sample+e.zy, 1.).x;\r\n\r\n    // float t = texture2D(u_buffer, sample + vec2(0., -delta*ratio)).x;\r\n    // float r = texture2D(u_buffer, sample + vec2(delta, 0.)).x;\r\n    // float b = texture2D(u_buffer, sample + vec2(0., delta*ratio)).x;\r\n    // float l = texture2D(u_buffer, sample + vec2(-delta, 0.)).x;\r\n\r\n    // fragcolour = (fragcolour + t + r + b + l) / 5.;\r\n    d += -(texcol.y-.5)*2. + (t + r + b + l - 2.);\r\n    d *= .99;\r\n    d *= float(u_frame > 5);\r\n    d = d*.5+.5;\r\n\r\n    fragcolour = vec4(d, texcol.x, 0, 0);\r\n    \r\n    return fragcolour;\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  //   Naive environment mapping. Pass the reflected vector and pull back the texture position for that ray.\r\n  vec3 envMap(vec3 rd, vec3 sn, float scale){\r\n\r\n    // rd.xy -= u_time*.2; // This just sort of compensates for the camera movement\r\n    // rd.xy -= movement;\r\n    rd *= 1.; // scale the whole thing down a but from the scaled UVs\r\n\r\n    vec3 col = texture2D(u_environment, rd.xy - .5).rgb*2.;\r\n    col *= normalize(col);\r\n    // col *= vec3(1., 1., 1.2);\r\n    // col *= vec3(hash2(rd.xy).y * .5 + .5);\r\n\r\n    return col;\r\n\r\n  }\r\n  \r\n  float bumpMap(vec2 uv, float height, inout vec3 colourmap) {\r\n    \r\n    \r\n    vec3 shade;\r\n    \r\n    vec2 sample = gl_FragCoord.xy / u_resolution.xy;\r\n    sample += uv;\r\n    vec2 ps = vec2(1.0) / u_resolution.xy;\r\n    \r\n    shade = vec3(blur(u_buffer, sample, ps*blurStrength));\r\n    // shade = texture2D(u_buffer, sample).rgb;\r\n    // shade = vec3(shade.y * shade.y);\r\n    \r\n    return 1. - shade.x * height;\r\n  }\r\n  float bumpMap(vec2 uv, float height) {\r\n    vec3 colourmap;\r\n    return bumpMap(uv, height, colourmap);\r\n  }\r\n\r\n  vec4 renderPass(vec2 uv, inout float distortion) {\r\n    vec3 surfacePos = vec3(uv, 0.0);\r\n    vec3 ray = normalize(vec3(uv, 1.));\r\n    // vec3 lightPos = vec3(cos(u_time / 2.) * 2., sin(u_time / 2.) * 2., -3.);\r\n    vec3 lightPos = vec3(cos(u_time * .5 + 2.) * 2., 1. + sin(u_time * .5 + 2.) * 2., -3.);\r\n    vec3 normal = vec3(0., 0., -1);\r\n\r\n    vec2 sampleDistance = vec2(.005, 0.);\r\n    \r\n    vec3 colourmap;\r\n    \r\n    float fx = bumpMap(sampleDistance.xy, .2);\r\n    float fy = bumpMap(sampleDistance.yx, .2);\r\n    float f = bumpMap(vec2(0.), .2, colourmap);\r\n    \r\n    distortion = f;\r\n    \r\n    fx = (fx-f)/sampleDistance.x;\r\n    fy = (fy-f)/sampleDistance.x;\r\n    normal = normalize( normal + vec3(fx, fy, 0) * 0.2 );\r\n    \r\n    // Holy fuck balls, fresnel!\r\n    // specular = max(0.0, min(1.0, bias + scale * (1.0 + length(camPos-sp * surfNormal)) * power));\r\n    float shade = bias + (scale * pow(1.0 + dot(normalize(surfacePos-vec3(uv, -3.0)), normal), power));\r\n\r\n    vec3 lightV = lightPos - surfacePos;\r\n    float lightDist = max(length(lightV), 0.001);\r\n    lightV /= lightDist;\r\n\r\n    vec3 lightColour = vec3(.8, .8, 1.);\r\n\r\n    float shininess = .8;\r\n    float brightness = 1.;\r\n\r\n    float falloff = 0.1;\r\n    float attenuation = 1./(1.0 + lightDist*lightDist*falloff);\r\n\r\n    float diffuse = max(dot(normal, lightV), 0.);\r\n    float specular = pow(max(dot( reflect(-lightV, normal), -ray), 0.), 52.) * shininess;\r\n    \r\n    // vec3 tex = texture2D(u_environment, (reflect(vec3(uv, -1.), normal)).xy ).rgb;\r\n    vec3 reflect_ray = reflect(vec3(uv, 1.), normal * 1.);\r\n    // The reflect ray is the ray wwe use to determine the reflection.\r\n    // We use the UV less the movement (to account for \"environment\") to the surface normal\r\n    vec3 tex = envMap(reflect_ray, normal, 1.5) * (shade + .5); // Fake environment mapping.\r\n\r\n    vec3 texCol = (vec3(.4, .6, .9) + tex * brightness) * .5;\r\n    \r\n    float metalness = (1. - colourmap.x);\r\n    metalness *= metalness;\r\n\r\n    vec3 colour = (texCol * (diffuse*vec3(1, .97, .92)*2. + 0.5) + lightColour*specular * f * 2. * metalness)*attenuation*1.5;\r\n    // colour *= 1.5;\r\n\r\n    // return vec4(shade);\r\n    return vec4(colour, 1.);\r\n  }\r\n\r\n  void main() {\r\n    \r\n    vec4 fragcolour = vec4(0);\r\n    \r\n    if(u_renderpass) {\r\n      fragcolour = renderRipples();\r\n    } else {\r\n      \r\n      \r\n      // vec2 uv = (gl_FragCoord.xy - 0.5 * u_resolution.xy) / min(u_resolution.y, u_resolution.x);\r\n      // vec2 uv = (gl_FragCoord.xy) / (u_resolution.xy * vec2(1.0, 1.0));\r\n      // vec2 uv = gl_FragCoord.xy / u_resolution.xy * ( 1.0 / u_scale);\r\n      // vec2 uv = vec2(1.0, 1.0) / u_scale ;\r\n      vec2 uv = gl_FragCoord.xy / u_img.xy / u_scale;\r\n      // vec2 uv = gl_FragCoord.xy / u_resolution.xy ;\r\n      // vec2 sample = gl_FragCoord.xy / u_resolution.xy ;\r\n      // uv.x += sin(u_time*.5);\r\n      // sample.x += sin(u_time*.05);\r\n      \r\n      float distortion;\r\n      vec4 reflections = renderPass(uv, distortion);\r\n      \r\n      vec4 c = texture2D(u_texture, uv + u_offset);\r\n      fragcolour = c * c * c * .4;\r\n      // fragcolour *= fragcolour; \r\n      // fragcolour += (texture2D(u_buffer, sample+.03).x)*.1 - .1;\r\n      fragcolour += reflections*.7;\r\n      // fragcolour = texture2D(u_buffer, sample + fragcolour.rg * .005);\r\n      // // fragcolour = vec4(fragcolour.x * fragcolour.x);\r\n    }\r\n\r\n    gl_FragColor = fragcolour ;\r\n  }\r\n`","export default `\r\nvoid main() {\r\n  // vec2 scale = vec2(1.0, 1.0);\r\n  // gl_Position = vec4( scale * position.xy, 1.0, 1.0 );\r\n  gl_Position = vec4( position, 1.0 );\r\n}`","import React, { Component } from 'react';\r\n\r\nimport fragmentShader from './shaders/fragmentShader.js';\r\nimport vertexShader from './shaders/vertexShader.js';\r\n\r\nconst image = `${process.env.PUBLIC_URL}/images/head_back_sc.jpg`;\r\n\r\nlet geometry = \"\";\r\nlet material = \"\";\r\nlet uniforms = \"\";\r\nlet mesh = \"\";\r\n\r\nlet rtTexture = \"\";\r\nlet rtTexture2 = \"\";\r\n\r\nlet mouse = {\r\n  x: 0,\r\n  y: 0\r\n};\r\nlet press_time = \"\";\r\n\r\n\r\n/*eslint-disable no-undef*/\r\nclass Ripple extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.initMesh();\r\n  }\r\n\r\n  // Инициализация меша\r\n  initMesh = () => {\r\n    let divisor = 1 / 8;\r\n    let textureFraction = 1 / 1;\r\n\r\n    const loader = new THREE.TextureLoader();\r\n\r\n    let texture, environment, pooltex;\r\n    loader.load(\r\n      `${process.env.PUBLIC_URL}/images/noise.png`,\r\n      (tex) => {\r\n        texture = tex;\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.minFilter = THREE.LinearFilter;\r\n        \r\n        loader.load( \r\n          `${process.env.PUBLIC_URL}/images/env_lat-lon.png`,\r\n          function environment_load(tex) {\r\n            environment = tex;\r\n            environment.wrapS = THREE.RepeatWrapping;\r\n            environment.wrapT = THREE.RepeatWrapping;\r\n            environment.minFilter = THREE.NearestMipMapNearestFilter;\r\n            \r\n            loader.load(\r\n              image,\r\n              function environment_load(tex) {\r\n                pooltex = tex;\r\n                pooltex.wrapS = THREE.RepeatWrapping;\r\n                pooltex.wrapT = THREE.RepeatWrapping;\r\n                pooltex.minFilter = THREE.NearestMipMapNearestFilter;\r\n                \r\n                onTexLoad();\r\n                animate();\r\n              }\r\n            )\r\n          }\r\n        );\r\n      }\r\n    );\r\n\r\n    let onTexLoad = () => {\r\n      geometry = new THREE.PlaneBufferGeometry( 2, 2 );\r\n\r\n      rtTexture = new THREE.WebGLRenderTarget(Math.floor(this.props.pWidth * textureFraction), Math.floor(this.props.pHeight * textureFraction), { type: THREE.FloatType, minFilter: THREE.NearestMipMapNearestFilter });\r\n      \r\n      rtTexture2 = new THREE.WebGLRenderTarget(Math.floor(this.props.pWidth * textureFraction), Math.floor(this.props.pHeight * textureFraction), { type: THREE.FloatType, minFilter: THREE.NearestMipMapNearestFilter });\r\n      \r\n      let scale;\r\n      let offset = new THREE.Vector2();\r\n\r\n      uniforms = {\r\n        u_time: { type: \"f\", value: 1.0 },\r\n        u_resolution: { type: \"v2\", value: new THREE.Vector2() },\r\n        u_img: { type: \"v2\", value: new THREE.Vector2(pooltex.image.width, pooltex.image.height)},\r\n        u_noise: { type: \"t\", value: texture },\r\n        u_buffer: { type: \"t\", value: rtTexture.texture },\r\n        u_texture: { type: \"t\", value: pooltex }, \r\n        u_environment: { type: \"t\", value: environment },\r\n        u_mouse: { type: \"v3\", value: new THREE.Vector3() },\r\n        u_frame: { type: \"i\", value: -1. },\r\n        u_renderpass: { type: 'b', value: false },\r\n        u_scale: {type: \"f\", value: scale},\r\n        u_offset: {type: \"v2\", value: offset}\r\n      };\r\n\r\n      material = new THREE.ShaderMaterial( {\r\n        uniforms: uniforms,\r\n        vertexShader: vertexShader,\r\n        fragmentShader: fragmentShader,\r\n      } );\r\n      material.extensions.derivatives = true;\r\n\r\n      mesh = new THREE.Mesh( geometry, material );\r\n\r\n      this.props.updateMesh(mesh);\r\n  \r\n\r\n      let onWindowResize = () => {\r\n        const width = this.props.pBox.clientWidth;\r\n        const height = this.props.pBox.clientHeight;\r\n        \r\n        uniforms.u_resolution.value.x = width;\r\n        uniforms.u_resolution.value.y = height;\r\n        rtTexture = new THREE.WebGLRenderTarget(width * textureFraction, height * textureFraction);\r\n        rtTexture2 = new THREE.WebGLRenderTarget(width * textureFraction, height * textureFraction);\r\n        \r\n        uniforms.u_frame.value = -1;\r\n\r\n        /** Замуты с позицией и размером изображения */\r\n        const width_ratio = this.props.pWidth / pooltex.image.width;\r\n        const height_ratio = this.props.pHeight / pooltex.image.height;\r\n\r\n        scale = Math.max(width_ratio, height_ratio);\r\n        uniforms.u_scale.value = scale;\r\n\r\n        let img_height = pooltex.image.height * scale;\r\n        let img_width = pooltex.image.width * scale;\r\n        let box_height = this.props.pHeight;\r\n        let box_width = this.props.pWidth;\r\n        uniforms.u_offset.value.y = ( img_height - box_height) / img_height;\r\n        uniforms.u_offset.value.x = 0;\r\n\r\n        /** Смещение позиции направо на телефонах */\r\n        if (window.innerWidth < 760) {\r\n          uniforms.u_offset.value.x = (img_width - box_width) / img_width;\r\n        }\r\n      };\r\n\r\n      onWindowResize();\r\n      window.addEventListener( 'resize', onWindowResize, false );\r\n\r\n      let ripple = (e)=> {\r\n        clearTimeout(press_time);\r\n        uniforms.u_mouse.value.z = 1;\r\n        let ratio = this.props.pHeight / this.props.pWidth;\r\n        if(this.props.pHeight > this.props.pWidth) {\r\n          mouse.x = (e.pageX - this.props.pWidth / 2) / this.props.pWidth;\r\n          mouse.y = (e.pageY - this.props.pHeight / 2) / this.props.pHeight * -1 * ratio;\r\n        } else {\r\n          mouse.x = (e.pageX - this.props.pWidth / 2) / this.props.pWidth / ratio;\r\n          mouse.y = (e.pageY - this.props.pHeight / 2) / this.props.pHeight * -1;\r\n        }\r\n\r\n        press_time = setTimeout(() => {\r\n          uniforms.u_mouse.value.z = 0;\r\n        }, 100)\r\n        \r\n        // e.preventDefault();\r\n      }\r\n  \r\n      this.props.pBox.addEventListener('pointermove', ripple);\r\n      this.props.pBox.addEventListener('click', ripple);\r\n      this.props.pBox.addEventListener('mouseout', ()=> {\r\n        uniforms.u_mouse.value.z = 0;\r\n      });\r\n    };\r\n\r\n    let animate = (delta) => {\r\n      requestAnimationFrame( animate );\r\n      render(delta);\r\n    };\r\n\r\n    let render = (delta) => {\r\n      uniforms.u_frame.value++;\r\n      \r\n      uniforms.u_mouse.value.x += ( mouse.x - uniforms.u_mouse.value.x ) * divisor;\r\n      uniforms.u_mouse.value.y += ( mouse.y - uniforms.u_mouse.value.y ) * divisor;\r\n      \r\n      this.props.updateRenderer();\r\n      renderTexture(delta);\r\n    };\r\n\r\n    let renderTexture = (delta) => {      \r\n      let odims = uniforms.u_resolution.value.clone();\r\n      uniforms.u_resolution.value.x = this.props.pWidth * textureFraction;\r\n      uniforms.u_resolution.value.y = this.props.pHeight * textureFraction;\r\n\r\n      uniforms.u_buffer.value = rtTexture2.texture;\r\n      \r\n      uniforms.u_renderpass.value = true;\r\n      \r\n      window.rtTexture = rtTexture;\r\n      this.props.setRenderTarget(rtTexture);\r\n      \r\n      let buffer = rtTexture;\r\n      rtTexture = rtTexture2;\r\n      rtTexture2 = buffer;\r\n\r\n      uniforms.u_buffer.value = rtTexture.texture;\r\n      uniforms.u_resolution.value = odims;\r\n      uniforms.u_renderpass.value = false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Ripple;","import React, { Component } from 'react';\r\nimport Ripple from '../Ripple/Ripple.js';\r\n\r\n\r\n/*eslint-disable no-undef*/\r\nclass ThreeWrap extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state  = {\r\n      loaded: false,\r\n      box: \"\",\r\n      width: window.innerWidth,   // ширина сцены (по умолчанию все окно)\r\n      height: window.innerHeight,   // высота сцены (по умолчанию все окно)\r\n  \r\n      scene: new THREE.Scene(),\r\n      camera: new THREE.Camera(),\r\n      renderer: new THREE.WebGLRenderer(),\r\n      mouse: \"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"load\", () => {\r\n      const box = document.querySelector(\".scene-wrap\");\r\n      const width = box.clientWidth;\r\n      const height = box.clientHeight;\r\n      this.state.renderer.setSize( width, height );\r\n      // this.state.renderer.setPixelRatio(window.devicePixelRatio);\r\n    \r\n      this.setState ({\r\n        box: box,\r\n        width: width,\r\n        height: height,\r\n        loaded: true,\r\n      })\r\n      box.appendChild( this.state.renderer.domElement );\r\n  \r\n      window.addEventListener(\"resize\", this.updateSize);\r\n      document.querySelector(\".headLink\").ondragstart = function () { return false; };\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"unmount\")\r\n  }\r\n\r\n  updateSize = () => {\r\n    const width = this.state.box.clientWidth;\r\n    const height = this.state.box.clientHeight;\r\n\r\n    this.setState ({\r\n      width: width,\r\n      height: height,\r\n      // camera: {\r\n      //   // ...this.state.camera,\r\n      //   aspect: width / height\r\n      // },\r\n    });\r\n\r\n    // this.state.camera.updateProjectionMartix();\r\n    this.state.renderer.setSize( width, height );\r\n  }\r\n\r\n  updateMesh = (mesh) => {\r\n    this.state.scene.add(mesh);\r\n  }\r\n\r\n  updateRenderer = () => {\r\n    this.state.renderer.render( this.state.scene, this.state.camera );\r\n  }\r\n\r\n  setRenderTarget = (texture) => {\r\n    this.state.renderer.render( this.state.scene, this.state.camera, texture, true );\r\n    // this.state.renderer.setRenderTarget(texture);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"three-wrap\">\r\n        <div className=\"scene-wrap\">\r\n        </div>\r\n        {\r\n          this.state.loaded && \r\n          <Ripple\r\n            updateMesh = {this.updateMesh}\r\n            updateRenderer = {this.updateRenderer}\r\n            setRenderTarget = {this.setRenderTarget}\r\n            pWidth = {this.state.width}\r\n            pHeight = {this.state.height}\r\n            pBox = {this.state.box}\r\n          /> \r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ThreeWrap;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ThreeWrap from './webgl/ThreeWrap/ThreeWrap.js';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <Link to='/' className=\"headLink\" >\r\n        <header className=\"mainHeader\">\r\n          <ThreeWrap />\r\n          <div className=\"title\">AnimuSearcher</div>\r\n        </header>\r\n      </Link>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport './AnimuInfo.css';\r\n\r\nconst AnimuInfo = (props) => {\r\n    if (props.animu !== undefined) {\r\n        return(\r\n            <div className=\"animuInfo\"\r\n            style={{\r\n                backgroundImage: \"url(\" + props.animu.bannerImage + \")\"\r\n            }}\r\n            >\r\n                <div className='animuInfo__content'>\r\n                    <h1>{props.animu.title.romaji}</h1>\r\n                    <div> <img className='animuInfo__thumb' src={props.animu.coverImage.large} alt='thumb' /> </div>\r\n                    <div className='animuInfo__text'>\r\n                        <h3 className=\"animuInfo__title\">SYNOPSIS</h3>\r\n                        <p dangerouslySetInnerHTML = {{__html: props.animu.description }} />\r\n                        <h3 className=\"animuInfo__title\">RATING</h3>\r\n                        <div className='animuInfo__rating'>\r\n                            <meter min='0' max='100' optimum='100' low='40' high='70' value={props.animu.averageScore}></meter>\r\n                            <p className='animuInfo__score'>{props.animu.averageScore}/100</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n\r\n\r\n        )\r\n    }\r\n    else return ('wait')\r\n}\r\n\r\nexport default AnimuInfo;","import React, { Component } from 'react';\r\nimport AnimuInfo from '../AnimuInfo/AnimuInfo';\r\n\r\n\r\n\r\nclass Animu extends Component {\r\n    state = {\r\n        id: this.props.match.params.animuId\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.fetchItems()\r\n    }\r\n\r\n    fetchItems = () => {\r\n        var query = `\r\n            query ($id: Int, $page: Int, $perPage: Int) {\r\n                Page (page: $page, perPage: $perPage) {\r\n                pageInfo {\r\n                    total\r\n                    currentPage\r\n                    lastPage\r\n                    hasNextPage\r\n                    perPage\r\n                }\r\n                media (id: $id) {\r\n                    id\r\n                    title {\r\n                        romaji\r\n                        english\r\n                        native\r\n                    }\r\n                    coverImage {\r\n                        medium\r\n                        large\r\n                    }\r\n                    bannerImage\r\n                    description\r\n                    averageScore\r\n                }\r\n                }\r\n            }\r\n            `;\r\n\r\n        var variables = {\r\n            id: this.state.id\r\n        };\r\n\r\n        var url = 'https://graphql.anilist.co',\r\n            options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    query: query,\r\n                    variables: variables\r\n                })\r\n            };\r\n        function handleResponse(response) {\r\n            return response.json().then(function (json) {\r\n                return response.ok ? json : Promise.reject(json);\r\n            });\r\n        }\r\n        function handleError(error) {\r\n            alert('Error, check console');\r\n            console.error(error);\r\n        }\r\n\r\n        fetch(url, options)\r\n            .then(handleResponse)\r\n            .then(data => {\r\n                this.setState({\r\n                    animu: data.data.Page.media[0]\r\n                })\r\n            })\r\n            .catch(handleError)\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-wrap\">\r\n                <AnimuInfo animu={this.state.animu}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Animu;","import React from 'react';\r\n\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>woops this doesnt ex</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport main from '../main/main';\r\nimport Header from '../elements/Header/Header';\r\nimport Animu from '../elements/Animu/Animu';\r\nimport NotFound from '../elements/NotFound/NotFound'\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter basename={`${process.env.PUBLIC_URL}`}>\r\n      <div className=\"main\">\r\n        <Header />\r\n        <React.Fragment>\r\n          <Switch>\r\n            <Route path='/' component={main} exact />\r\n            <Route path='/:animuId' component={Animu} exact />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </React.Fragment>\r\n      </div>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}